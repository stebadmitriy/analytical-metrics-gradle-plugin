/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.1/userguide/custom_plugins.html
 */

//plugins {
//    // Apply the Java Gradle plugin development plugin to add support for developing Gradle plugins
//    id 'java-gradle-plugin'
//
//    id 'java'
//}
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
    id "maven-publish"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'groovy'



group = 'ru.clevertec'
version = '1.0'

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: mavenLocal().url)
        }
    }
}
repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // Use the awesome Spock testing and specification framework
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    compile gradleApi()
    implementation localGroovy()
}


def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution "repo"
        }
    }
    developers {
        developer {
            id "thombergs"
            name "Tom Hombergs"
            email "tom.hombergs@gmail.com"
        }
    }

//    scm {
//        url "https://github.com/thombergs/myAwesomeLib"
//    }
}

publishing {
    publications {
        mavenPublication(MavenPublication) {
            artifact jar
            groupId 'ru.clevertec'
            artifactId 'analytical-metrics'
            version '1.1'
        }
    }
}

bintray {
    user = System.getProperty('bintray.user')
    key = System.getProperty('bintray.key')
//    publications = ['mavenPublication']
//    configurations = ['archives']
    pkg {
        repo = 'analytical-metrics'
        name = 'analytical-metrics'
        userOrg = 'stebadmitriy'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://gitlab.clevertec.ru/products/analytical-metrics-gradle-plugin.git'
        version {
            name = '1.0.0'
            desc = '1.0.0'
            released  = new Date()
        }
    }

}

//gradlePlugin {
//    // Define the plugin
//    plugins {
//        greeting {
//            id = 'gradle.plugin.greeting'
//            implementationClass = 'gradle.plugin.GradlePluginPlugin'
//        }
//    }
//}

// Add a source set for the functional test suite
//sourceSets {
//    functionalTest {
//    }
//}

//gradlePlugin.testSourceSets(sourceSets.functionalTest)
//configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)
//
//// Add a task to run the functional tests
//task functionalTest(type: Test) {
//    testClassesDirs = sourceSets.functionalTest.output.classesDirs
//    classpath = sourceSets.functionalTest.runtimeClasspath
//}
//
//check {
//    // Run the functional tests as part of `check`
//    dependsOn(tasks.functionalTest)
//}
